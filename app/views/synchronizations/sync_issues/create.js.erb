$(MODAL_CLASS).html("<%= j render 'synchronize_progressbar' %>");
bind_custom_scrollbar();

var progress_path = "<%= progress_info_path(@job_id) %>",
    success_objects = [],
    failed_objects = [],
    is_stoped = false,
    messages = [];

$('#synchronizationProgress').progressbar({
  value: 0,
  complete: function() {
    $('.status').next('.text').text("<%= t 'complete' %>");
    $('.sync_break').hide();
    $('.sync_ok').show();
    update_issues_board('<%= @project.id %>', true);
  },
  create: function() {
    $('.status').next('.text').text("<%= t 'starting' %>");
  }
});

$('.sync_break').click(function() {
  $.ajax({
    type: 'DELETE',
    url: "<%= kill_job_path(@job_id) %>",
    success: function() {
      is_stoped = true;
      $('#synchronizationProgress').progressbar({ value: 100 });
      var success_element = $("<%= j render 'success_synchronization_message' %>");
      success_element.find('h4').text("<%= t 'breaked_synchronize' %>");
      $('.status').next('.text').text("<%= t 'breaked' %>");
      success_element.appendTo('.btn-block');
    }
  });
});

progressBarLoad();

function progressBarLoad() {
  if ( is_stoped ) {
    return ;
  }

  $.ajax({
    url: progress_path,
    success: function(data) {
      $('#synchronizationProgress').progressbar({ value: data.progress });
      $('.received').prev('.percent').text(data.progress + '%');
      add_completed_plugin_box(data.completed_objects);

      if (data.message != null ) {
        messages = data.message.split(': ');

        $('.file-name').next('.text').text(messages[0]);
        $('.status').next('.text').text(messages[1]);
      }

      if ( data.progress < 100 ) {
        setTimeout(progressBarLoad, 1000);
      }
    }
  });
}

var success_element, fail_element;
function add_completed_plugin_box(response_completed) {

  response_completed['success'].diff(success_objects).forEach(function(plugin_name) {
    success_element = $("<%= j render 'success_synchronization_message' %>")
    success_element.find('h4').text(plugin_name);
    success_element.appendTo('.sync-progressbar .mCSB_container');
  })

  response_completed['fail'].diff(failed_objects).forEach(function(plugin_name) {
    fail_element = $("<%= j render 'error_connection_message' %>")
    fail_element.find('h4').text(plugin_name);
    fail_element.find('p').remove();
    fail_element.appendTo('.sync-progressbar .mCSB_container');
  })

  success_objects = response_completed['success']
  failed_objects = response_completed['fail']
}
